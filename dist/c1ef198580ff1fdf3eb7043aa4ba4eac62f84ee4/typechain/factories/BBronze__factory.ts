/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BBronze } from "../BBronze";

export class BBronze__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BBronze> {
    return super.deploy(overrides || {}) as Promise<BBronze>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BBronze {
    return super.attach(address) as BBronze;
  }
  connect(signer: Signer): BBronze__factory {
    return super.connect(signer) as BBronze__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BBronze {
    return new Contract(address, _abi, signerOrProvider) as BBronze;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "getColor",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060ba8061001e6000396000f3fe6080604052348015600f57600080fd5b50600436106044577c010000000000000000000000000000000000000000000000000000000060003504639a86139b81146049575b600080fd5b604f6061565b60408051918252519081900360200190f35b7f42524f4e5a4500000000000000000000000000000000000000000000000000009056fea265627a7a72315820a47962b22ce482c2db3e0aed6f3627c024ff802710e09eee127c54c24e62168764736f6c634300050c0032";
